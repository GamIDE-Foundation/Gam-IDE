name: Android CI

on:
  workflow_dispatch:
  push:
    branches:
      - 'dev'
  pull_request:
    branches:
      - 'dev'

jobs:
  init:
    name: Init
    runs-on: ubuntu-latest   
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Notify Telegram
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_RBKINC_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_RBKINC_CHAT_ID }}
        run: |
          commit_message=$(git log -1 --pretty=%B)
          commit_hash=$(git log -1 --pretty=%h)
          message="ðŸ”¨ 1 new commit to ${{ github.repository }}:${{ github.ref }}:\n\n${commit_hash}: ${commit_message}"
          curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage" \
            -d "chat_id=${TELEGRAM_CHAT_ID}" \
            -d "text=${message}"
        
  engine-debug-apk:
    name: Build Engine Debug APK
    needs: init
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          java-version: '22'
          distribution: 'oracle'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v4
      
      - name: Build with Gradle
        id: gradle_build_debug
        run: ./gradlew assembleDebug

      - name: Upload debug apk
        uses: actions/upload-artifact@v4
        with:
          name: engine-debug
          compression-level: 0
          path: app/build/outputs/apk/debug

  engine-release-apk:
    name: Build Engine Release APK
    runs-on: ubuntu-latest
    needs: init
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          java-version: '22'
          distribution: 'oracle'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v4
      
      - name: Build with Gradle
        id: gradle_build_release
        run: ./gradlew assembleRelease
        
      - name: Upload mapping
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: engine-release-mapping
          compression-level: 0
          path: app/build/outputs/mapping/release/
             
      - name: Sign APK
        id: sign_apk
        uses: noriban/sign-android-release@v5
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.KEYSTORE_FILE }}
          alias: ${{ secrets.KEYSTORE_ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"      

      - name: Upload release apk
        uses: actions/upload-artifact@v4
        with:
          name: engine-release
          compression-level: 0
          path: ${{steps.sign_apk.outputs.signedReleaseFile}}

  send-apks-to-telegram:
    name: Send APKs to Telegram
    runs-on: ubuntu-latest
    needs: [init, engine-debug-apk, engine-release-apk]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install telethon
          
      - name: Get the last commit message
        id: get_commit_msg
        run: |
          commit_message=$(git log -1 --pretty=format:'%s')
          echo "message=$commit_message" >> $GITHUB_OUTPUT
          
      - name: Download Release APK
        uses: actions/download-artifact@v4
        with:
          name: engine-release
          
      - name: Download Debug APK
        uses: actions/download-artifact@v4
        with:
          name: engine-debug
          
      - name: List all repo
        run: ls
          
      - name: Rename debug apk file 
        run: |
          mv app-debug.apk robok-engine-debug.apk
          ls 
          
      - name: Rename release apk file 
        run: |
          mv app-release-unsigned-signed.apk robok-engine-release.apk
          ls 
          
      - name: Send APKs to Telegram
        env:
          API_ID: ${{ secrets.TELEGRAM_APP_API_ID }}
          API_HASH: ${{ secrets.TELEGRAM_APP_API_HASH }}
          BOT_TOKEN: ${{ secrets.TELEGRAM_RBKINC_BOT_TOKEN }}
          CHAT_ID: ${{ secrets.TELEGRAM_RBKINC_CHAT_ID }}
          APK_RELEASE: robok-engine-release.apk
          APK_DEBUG: robok-engine-debug.apk
          TOPIC_ID: ${{ secrets.TELEGRAM_RBKINC_CHAT_TOPIC_ID }}
          DESCRIPTION: |
            *${{ github.actor }}* committed to [${{ github.repository }}](https://github.com/${{ github.repository }})

            Branch: *${{ github.head_ref }}*
            Commit message: `${{ steps.get_commit_msg.outputs.message }}`
        run: python .github/telegram/send_apk.py
        continue-on-error: true